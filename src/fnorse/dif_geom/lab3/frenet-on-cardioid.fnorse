/****************************************************************
 *
 * Copyright 1990, Brown University, Providence, RI
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 *
 ****************************************************************/

/**********************************************************************
 *
 * RCH Sept 1990
 *
 * Space cardioid with attached Frenet-Serret 
 * frame.
 **********************************************************************/

/*
 * slider  to move along the curves similar to the cardioid
 */
sl1 := widget Slider(0, 2), init<-1, drag<-0,
   name<-"Value of C in the 'cardioid' equation";

/*****
 * NOW DEFINE THE CURVE
 *****/

/* define the radius function */
r := R -> R:
     t -> (sl1 + cos(t));	

/* 
 * define the cardioid using the above radius 
 * function. The "3*" is just to make the curve
 * bigger than the Frenet frame vectors 
 */
f := R -> R^3 :
     t -> 3*[cos(t)*r(t), sin(t)*r(t),sin(t)]
  ;

/* draw vectors for a given function on the curve */
PropertyOnCurve
   := (R->R^3, (R->R^3) -> (R->R^3)) -> (R^2->R^3)
   :  (f, p) -> ([t, d] -> f(t) + d p(f)(t))
   ;

/* interval for the actual space cardioid */
mint := sample(Interval(0, 2pi, 100));
/* interval for placing Frenet frame vectors */
cint := widget Slider(0, 2pi), name<-"Possition of frenet frame";

dom := [ {cint} >< Interval(0, 1, 2) ];

widget Show ( f(mint) union 
	      Axes    union PropertyOnCurve(f, FrenetNormal)(dom)
		      union PropertyOnCurve(f, FrenetTangent)(dom)
		      union PropertyOnCurve(f, FrenetBinormal)(dom) );


