/****************************************************************
 *
 * Copyright 1990, Brown University, Providence, RI
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 *
 ****************************************************************/

/**********************************************************************
 * from lab #2
 *
 * plane sliding around on z=0,
 * with a projection on the surface 
 **********************************************************************/

draw := widget type<-`view;
c := widget type<-`typein, init<-.5, name<-"C from z=x^2+C(y^2)";


f := R^2 -> R^3
  : [u,v] -> [ u, v, u**2 + c*v**2 ]	
  ;	

Dom := Grid( (-2, 2, 20), (-2, 2, 20) );

widget type<-`vobject, set<-( f Dom ),
	parent<-`draw, color<-"red";


x := widget Slider( -1.5, 1.5 ), init<-0, "X center";
y := widget Slider( -1.5, 1.5 ), init<-0, "Y center";

Circle := widget CheckBox;

pt := [x,y];

PatDom := Patch( ( -0.5, 0.5, 5), (-0.5, 0.5, 5) ) if Circle = False else
          Patch( (0, .5, 5), (0, 2pi, 10 ) ) ;
BPatDom := Patch( ( -0.5, 0.5, 2), (-0.5, 0.5, 2) ) if Circle = False else
          Patch( (0, .5, 2), (0, 2pi, 10 ) ) ;

Plane
  := R^2->R^2
  : [u,v] -> [u,v]+pt if Circle = False else
	     u*[cos(v), sin(v) ]+pt
  ;

widget type<-`vobject, set<-( (Plane BPatDom) >< {0} ),
	parent<-`draw, color<-"green";

widget type<-`vobject, set<-( f(Plane PatDom) ),
	parent<-`draw, color<-"green";

widget type<-`vobject, set<-( Axes ),
	parent<-`draw, color<-"black";

