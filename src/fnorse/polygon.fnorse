/**********************************************************************
 * Copyright 1991 Brown University, Providence, RI
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 **********************************************************************/
/* $Id: polygon.fnorse,v 1.3 1993/06/01 19:23:36 rch Exp $ */

/* edge-based polyhedra */

Cube := (
   [[-1, -1, -1],
    [ 1, -1, -1],
    [-1,  1, -1],
    [ 1,  1, -1],
    [-1, -1,  1],
    [ 1, -1,  1],
    [-1,  1,  1],
    [ 1,  1,  1]],

  {[1, 2], [1, 3], [1, 5], [2, 4], [2, 6], [3, 4],
   [3, 7], [4, 8], [5, 6], [5, 7], [6, 8], [7, 8]}
  );

Tetrahedron := (
   [[-1, -1, -1],
    [ 1,  1, -1],
    [-1,  1,  1],
    [ 1, -1,  1]],

  {[1, 2], [1, 3], [1, 4], [2, 3], [2, 4], [3, 4]}
  );

Octahedron := (
   [[ 1,  0,  0],
    [-1,  0,  0],
    [ 0,  1,  0],
    [ 0, -1,  0],
    [ 0,  0,  1],
    [ 0,  0, -1]],

/* each of these shows up twice -- Ack */
  {[1, 3], [1, 4], [1, 5], [1, 6],
   [2, 3], [2, 4], [2, 5], [2, 6],
   [3, 1], [3, 2], [3, 5], [3, 6],
   [4, 1], [4, 2], [4, 5], [4, 6],
   [5, 1], [5, 2], [5, 3], [5, 4],
   [6, 1], [6, 2], [6, 3], [6, 4]}
  );

Icosahedron := (
  let a be (sqrt(5) - 1)/2 in 
  [[ 1,  0,  a],
   [ 1,  0, -a],
   [-1,  0,  a],
   [-1,  0, -a],
   [ a,  1,  0],
   [-a,  1,  0],
   [ a, -1,  0],
   [-a, -1,  0],
   [ 0,  a,  1],
   [ 0, -a,  1],
   [ 0,  a, -1],
   [ 0, -a, -1]],

  {[1, 2], [1, 5], [1, 9], [1, 10], [1, 7],
   [2, 5], [2, 11], [2, 12], [2, 7],
   [3, 4], [3, 6], [3, 9], [3, 10], [3, 8],
   [4, 6], [4, 11], [4, 12], [4, 8],
   [5, 6], [5, 9], [5, 11],
   [6, 9], [6, 11],
   [7, 8], [7, 10], [7, 12],
   [8, 10], [8, 12],
   [9, 10],
   [11, 12]}
  );

makeEdges
  := R^?^? -> Z^2  -> R -> R^?
  :  verts -> edge -> t -> t verts^(edge^1) + (1-t)verts^(edge^2)
  ;

Polygon
  := (R^?^?, {Z^2}) -> {R^?}
  :  (verts, edges) -> (makeEdges verts edges)(Interval(0, 1, 2))
  ;

widget Show(Polygon(Cube));
widget Show(Polygon(Tetrahedron));
widget Show(Polygon(Octahedron));
widget Show(Polygon(Icosahedron));

/*
HyperCube := (
   [[-1, -1, -1, -1],
    [ 1, -1, -1, -1],
    [-1,  1, -1, -1],
    [ 1,  1, -1, -1],
    [-1, -1,  1, -1],
    [ 1, -1,  1, -1],
    [-1,  1,  1, -1],
    [ 1,  1,  1, -1],
    [-1, -1, -1,  1],
    [ 1, -1, -1,  1],
    [-1,  1, -1,  1],
    [ 1,  1, -1,  1],
    [-1, -1,  1,  1],
    [ 1, -1,  1,  1],
    [-1,  1,  1,  1],
    [ 1,  1,  1,  1]],

  {[1, 2], [1, 3], [1, 5], [2, 4], [2, 6], [3, 4],
   [3, 7], [4, 8], [5, 6], [5, 7], [6, 8], [7, 8],
   [9, 10], [9, 11], [9, 13], [10, 12], [10, 14], [11, 12],
   [11, 15], [12, 16], [13, 14], [13, 15], [14, 16], [15, 16],
   [1, 9], [2, 10], [3, 11], [4, 12], [5, 13], [6, 14],
   [7, 15], [8, 16]}
  );

b1 := widget Slider(0, pi/2), name<-"rotation around XW plane";
b2 := widget Slider(0, pi/2), name<-"rotation around YW plane";

A1 := [[cos b1, 0, 0, -sin b1],
       [     0, 1, 0,       0],
       [     0, 0, 1,       0],
       [sin b1, 0, 0,  cos b1]]
  ;
A2 := [[1,      0, 0,       0],
       [0, cos b2, 0, -sin b2],
       [0,      0, 1,       0],
       [0, sin b2, 0,  cos b2]]
  ;

rotate
   := R^4 -> R^4
   :  x   -> A2 (A1 x)
   ;

project
  := R^4 -> R^3
  :  [x, y, z, w] -> [x, y, z]
  ;
 

widget Show(project(rotate(Polygon(HyperCube))));
*/
